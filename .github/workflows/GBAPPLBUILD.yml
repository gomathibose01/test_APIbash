name: GB Application Build

on:
  workflow_dispatch:

jobs:
  build-application:
    runs-on: [self-hosted, Windows]
    
    env:
      PATH: 'C:\Program Files\Git\bin'
      CESAPI_SERVER: ${{ secrets.CESAPI_SERVER }}
      CES_204_IBMUSER_AUTHTOKEN: ${{ secrets.CES_204_IBMUSER_AUTHTOKEN }}
      PDS_NAME: 'IBMUSER.NEXTGEN.JCL'
      Win_Topaz_Location: 'C:\WorkbenchCLI'

    steps:
      # CESAPI_BUILDJCL Steps
      - name: Prepare, Setup & Define CICS config & Services 
        run: bash C:\dev\2024\NextGenKansas\cesAPIscript\cesAPI_buildjcl1_v1.0.sh

      # ISPW Sync Steps
      - name: Checkout the source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: GitHub to Code Pipeline synchronization
        uses: bmc-compuware/ispw-sync-local@main
        id: sync
        with:
          host: 'BMC.POPUP-MAINFRAME.COM'
          port: 16196
          uid: ${{ secrets.TSOUSER }}
          pass: ${{ secrets.TSOPASS }}
          runtimeConfiguration: 'ISPT'
          stream: 'PLAY'
          application: 'TEST'
          subAppl: 'PLAY'
          checkoutLevel: 'DEV1'
          gitUid: ${{ secrets.GITUID }}
          gitToken: ${{ secrets.GIT_TOKEN }}
          winTopazPath: ${{ env.Win_Topaz_Location }}
          showEnv: true

      - name: Get automatic build parameters
        run: echo "automaticBuildJson=${{ steps.sync.outputs.automaticBuildJson }}"

      - name: Generate step
        uses: bmc-compuware/ispw-generate@main
        id: generate
        if: ${{ steps.sync.outputs.automaticBuildJson != '{}'}}
        with:
          ces_url: ${{ secrets.CES_URL }}
          ces_token: ${{ secrets.CES_TOKEN }}
          srid: 'ISPT'
          runtime_configuration: 'ISPT'
          generate_automatically: ${{ steps.sync.outputs.automaticBuildJson }}

      - name: Wait 15 seconds for generate to complete
        run: Start-Sleep -s 15
        shell: powershell

      - name: Generate output
        if: success() || failure()
        run: |
          echo "failed count: ${{ steps.generate.outputs.generate_failed_count }}"
          echo "success count: ${{ steps.generate.outputs.generate_success_count }}"
          echo "timeout? ${{ steps.generate.outputs.is_timed_out }} "
          echo "has failure? ${{ steps.generate.outputs.has_failures }}"
          echo "task count: ${{ steps.generate.outputs.task_count }}"
          echo "set id: ${{ steps.generate.outputs.set_id }}"
          echo "url: ${{ steps.generate.outputs.url }}"
          echo "assignment id: ${{ steps.generate.outputs.assignment_id }}"

      # CESAPI_BUILDJCL2 Steps
      - name: CICS Program Newcopy
        run: bash C:\dev\2024\NextGenKansas\cesAPI_buildjcl2_v1.sh
